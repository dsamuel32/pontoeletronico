buildscript {
	ext {
		jacocoDestinationFile = "$buildDir/jacoco/jacoco.xml"
		//ojdbc6Version = '11.2.0.4.0'
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.0'
	id 'jacoco'
}

group = 'br.com.desafio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	def springfox = '2.9.2'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.postgresql:postgresql:42.2.14'

	implementation "io.springfox:springfox-swagger2:${springfox}"
	implementation "io.springfox:springfox-swagger-ui:${springfox}"

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'org.junit.platform:junit-platform-runner'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}

jacoco {
	toolVersion = '0.8.5'
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
		csv.enabled true
		xml.destination file(jacocoDestinationFile)
	}
}

sonarqube {
	properties {
		property 'sonar.projectName', 'Ponto Eletronico'
		property 'sonar.projectKey', 'br.com.desafio:pontoeletronico'
		property 'sonar.host.url', 'http://localhost:9000'
		property 'sonar.login', '9776918d73f31af71682a03d63489a133882d987'
		//property 'sonar.java.coveragePlugin', 'jacoco'
		property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
		property 'sonar.exclusions', '**/*App.java'
	}
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks['sonarqube'].dependsOn test


